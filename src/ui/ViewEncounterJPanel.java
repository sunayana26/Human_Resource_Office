/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.DoctorDirectory;
import model.Encounter;
import model.EncounterDirectory;
import model.Patient;
import model.PatientDirectory;
import model.VitalSigns;

/**
 *
 * @author sunayanashivanagi
 */
public class ViewEncounterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewEncounterJPanel
     */
    
    private PatientDirectory patientDirectory;
    private DoctorDirectory doctorDirectory;
    private EncounterDirectory encounterDirectory;
    private int updateIndex;
    private boolean deleteFlag;
    
    
    public ViewEncounterJPanel(PatientDirectory patientDirectory, DoctorDirectory doctorDirectory, EncounterDirectory encounterDirectory,boolean deleteFlag) {
        initComponents();
        
        this.patientDirectory = patientDirectory;
        this.doctorDirectory = doctorDirectory;
        this.encounterDirectory = encounterDirectory;
        this.deleteFlag=deleteFlag;

        for (Doctor d : doctorDirectory.getHistory()) {
            drpDoctorName.addItem(d.getUserName());
        }

        for (Patient p : patientDirectory.getHistory()) {
            drpPatientName.addItem(p.getUserName());
        }
        
        btnDelete.setVisible(deleteFlag);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEncountersPatient = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtUpdateDate = new com.toedter.calendar.JDateChooser();
        lblHeartRate3 = new javax.swing.JLabel();
        txtUpdateHearRate = new javax.swing.JTextField();
        lblHeartRate4 = new javax.swing.JLabel();
        txtUpdateHeight = new javax.swing.JTextField();
        lblHeartRate5 = new javax.swing.JLabel();
        txtUpdateWeight = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Update = new javax.swing.JButton();
        createEmployeeLabel = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        drpDoctorName = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        drpPatientName = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();

        setBackground(new java.awt.Color(202, 233, 159));

        tblEncountersPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Doctor Name", "Date", "Community Name", "City Name", "Specilization", "Disease"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEncountersPatient);

        btnEdit.setBackground(new java.awt.Color(0, 71, 119));
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel15.setText("Choose a date:");

        lblHeartRate3.setText("Heart Rate:");

        lblHeartRate4.setText("Height:");

        lblHeartRate5.setText("Weight:");

        jLabel14.setText("kg");

        jLabel13.setText("cm");

        jLabel12.setText("BPM");

        Update.setBackground(new java.awt.Color(255, 119, 0));
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        createEmployeeLabel.setBackground(new java.awt.Color(153, 153, 153));
        createEmployeeLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        createEmployeeLabel.setForeground(new java.awt.Color(0, 71, 119));
        createEmployeeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createEmployeeLabel.setText("Create Encounter");
        createEmployeeLabel.setToolTipText("To create new employee");

        jLabel16.setText("Select a Doctor :");

        drpDoctorName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        drpDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDoctorNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Select a Patient :");

        drpPatientName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        drpPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpPatientNameActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(163, 0, 0));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createEmployeeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 95, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel2))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(drpPatientName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(drpDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblHeartRate4)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtUpdateHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblHeartRate3)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtUpdateHearRate, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel13)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(25, 25, 25)
                                                .addComponent(lblHeartRate5)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtUpdateWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel14))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(26, 26, 26)
                                        .addComponent(txtUpdateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(25, 25, 25)))))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createEmployeeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtUpdateDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeartRate3)
                            .addComponent(txtUpdateHearRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeartRate4)
                            .addComponent(txtUpdateHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeartRate5)
                            .addComponent(txtUpdateWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel16)
                            .addComponent(drpDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(drpPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)))
                .addComponent(Update)
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblEncountersPatient.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to edit");
            return;
        }
        Encounter e = encounterDirectory.getHistory().get(selectedRow);
        this.updateIndex=selectedRow;
        
        
        txtUpdateHearRate.setText(String.valueOf(e.getVitalSigns().getHeartRate()));
        txtUpdateHeight.setText(String.valueOf(e.getVitalSigns().getHeight()));
        txtUpdateWeight.setText(String.valueOf(e.getVitalSigns().getWeight()));
        txtUpdateDate.setDate((e.getDate()));
        drpDoctorName.setSelectedItem(String.valueOf(e.getDoctor().getUserName()));
        drpPatientName.setSelectedItem(String.valueOf(e.getPatient().getUserName()));
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:

        //Reset validation
        //        valName.setText("");
        //        valEmployeeId.setText("");
        //        valDate.setText("");
        //        valTeamInfo.setText("");
        //        valCellPhoneNumber.setText("");
        //        valEmailAddress.setText("");
        //        valPhoto.setText("");
        //        if(validation()){
            java.util.Date date = txtUpdateDate.getDate();
            VitalSigns vs = new VitalSigns(Integer.parseInt(txtUpdateHearRate.getText()), Integer.parseInt(txtUpdateWeight.getText()), Integer.parseInt(txtUpdateHeight.getText()));
            Encounter e = new Encounter(date, vs, patientDirectory.search(String.valueOf(drpPatientName.getSelectedItem())), doctorDirectory.search(String.valueOf(drpDoctorName.getSelectedItem())));
            encounterDirectory.update(e, updateIndex);
            JOptionPane.showMessageDialog(this, " Encounter Was updated! ");
            populateTable();
            
            drpDoctorName.setSelectedIndex(0);
            drpPatientName.setSelectedIndex(0);
            txtUpdateDate.setDate(null);
            txtUpdateHearRate.setText("");
            txtUpdateHeight.setText("");
            txtUpdateWeight.setText("");
                    
            

            //    }
    }//GEN-LAST:event_UpdateActionPerformed

    private void drpDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDoctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDoctorNameActionPerformed

    private void drpPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpPatientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpPatientNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblEncountersPatient.getSelectedRow() ;

        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        else{
            encounterDirectory.delete(selectedRow);
            populateTable();
            JOptionPane.showMessageDialog(this, "Employee Deleted");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblEncountersPatient.getModel();
        model.setRowCount(0);

        for (Encounter e : encounterDirectory.getHistory()) {
            Object row[] = new Object[10];
            row[0] = e.getDoctor().getName();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd");
            String strDate = dateFormat.format(e.getDate());
            row[1] = strDate;
            row[2] = e.getDoctor().getCommunity().getCommunityName();
            row[3] = e.getDoctor().getCommunity().getCityName();
            row[4] = e.getDoctor().getSpecialization();
            row[5] = e.getPatient().getDisease();

            model.addRow(row);

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Update;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel createEmployeeLabel;
    private javax.swing.JComboBox<String> drpDoctorName;
    private javax.swing.JComboBox<String> drpPatientName;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeartRate3;
    private javax.swing.JLabel lblHeartRate4;
    private javax.swing.JLabel lblHeartRate5;
    private javax.swing.JTable tblEncountersPatient;
    private com.toedter.calendar.JDateChooser txtUpdateDate;
    private javax.swing.JTextField txtUpdateHearRate;
    private javax.swing.JTextField txtUpdateHeight;
    private javax.swing.JTextField txtUpdateWeight;
    // End of variables declaration//GEN-END:variables
}
